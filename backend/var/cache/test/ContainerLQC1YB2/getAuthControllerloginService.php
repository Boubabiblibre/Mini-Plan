<?php

namespace ContainerLQC1YB2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAuthControllerloginService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private '.service_locator.fLkKGsp.App\Controller\AuthController::login()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.fLkKGsp.App\\Controller\\AuthController::login()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'userRepository' => ['privates', '.errored.V4zk83H', NULL, 'Cannot determine controller argument for "App\\Controller\\AuthController::login()": the $userRepository argument is type-hinted with the non-existent class or interface: "App\\Repository\\UsersRepository".'],
            'passwordHasher' => ['privates', 'security.user_password_hasher', 'getSecurity_UserPasswordHasherService', true],
            'jwtManager' => ['services', 'lexik_jwt_authentication.jwt_manager', 'getLexikJwtAuthentication_JwtManagerService', true],
            'logger' => ['privates', 'logger', 'getLoggerService', false],
        ], [
            'userRepository' => '?',
            'passwordHasher' => '?',
            'jwtManager' => '?',
            'logger' => '?',
        ]))->withContext('App\\Controller\\AuthController::login()', $container);
    }
}
