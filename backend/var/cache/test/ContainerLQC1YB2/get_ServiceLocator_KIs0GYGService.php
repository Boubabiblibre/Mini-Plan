<?php

namespace ContainerLQC1YB2;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_KIs0GYGService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private '.service_locator.kIs0GYG' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.kIs0GYG'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\AuthController::login' => ['privates', '.service_locator.fLkKGsp.App\\Controller\\AuthController::login()', 'getAuthControllerloginService', true],
            'App\\Controller\\CategoryController::createCategory' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\CategoryController::createCategory()', 'getCategoryControllercreateCategoryService', true],
            'App\\Controller\\CategoryController::getAllCategories' => ['privates', '.service_locator.MTCWnA5.App\\Controller\\CategoryController::getAllCategories()', 'getCategoryControllergetAllCategoriesService', true],
            'App\\Controller\\CategoryController::getCategoryById' => ['privates', '.service_locator.MTCWnA5.App\\Controller\\CategoryController::getCategoryById()', 'getCategoryControllergetCategoryByIdService', true],
            'App\\Controller\\CategoryController::updateCategory' => ['privates', '.service_locator.HQ.7fB5.App\\Controller\\CategoryController::updateCategory()', 'getCategoryControllerupdateCategoryService', true],
            'App\\Controller\\CategoryController::deleteCategory' => ['privates', '.service_locator.HQ.7fB5.App\\Controller\\CategoryController::deleteCategory()', 'getCategoryControllerdeleteCategoryService', true],
            'App\\Controller\\MemberController::createMember' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\MemberController::createMember()', 'getMemberControllercreateMemberService', true],
            'App\\Controller\\MemberController::getAllMembers' => ['privates', '.service_locator.Zurzp9s.App\\Controller\\MemberController::getAllMembers()', 'getMemberControllergetAllMembersService', true],
            'App\\Controller\\MemberController::getMemberById' => ['privates', '.service_locator.Zurzp9s.App\\Controller\\MemberController::getMemberById()', 'getMemberControllergetMemberByIdService', true],
            'App\\Controller\\MemberController::updateMember' => ['privates', '.service_locator.cDm6hfL.App\\Controller\\MemberController::updateMember()', 'getMemberControllerupdateMemberService', true],
            'App\\Controller\\MemberController::deleteMember' => ['privates', '.service_locator.MMjNq0W.App\\Controller\\MemberController::deleteMember()', 'getMemberControllerdeleteMemberService', true],
            'App\\Controller\\NotificationController::createNotification' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\NotificationController::createNotification()', 'getNotificationControllercreateNotificationService', true],
            'App\\Controller\\NotificationController::getAllNotifications' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getAllNotifications()', 'getNotificationControllergetAllNotificationsService', true],
            'App\\Controller\\NotificationController::getNotificationById' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getNotificationById()', 'getNotificationControllergetNotificationByIdService', true],
            'App\\Controller\\NotificationController::markNotificationAsRead' => ['privates', '.service_locator.XTZwFOk.App\\Controller\\NotificationController::markNotificationAsRead()', 'getNotificationControllermarkNotificationAsReadService', true],
            'App\\Controller\\NotificationController::deleteNotification' => ['privates', '.service_locator.XTZwFOk.App\\Controller\\NotificationController::deleteNotification()', 'getNotificationControllerdeleteNotificationService', true],
            'App\\Controller\\PaymentController::createPayment' => ['privates', '.service_locator.gtQW1HD.App\\Controller\\PaymentController::createPayment()', 'getPaymentControllercreatePaymentService', true],
            'App\\Controller\\PaymentController::getAllPayments' => ['privates', '.service_locator.03VufjH.App\\Controller\\PaymentController::getAllPayments()', 'getPaymentControllergetAllPaymentsService', true],
            'App\\Controller\\PaymentController::getPaymentById' => ['privates', '.service_locator.03VufjH.App\\Controller\\PaymentController::getPaymentById()', 'getPaymentControllergetPaymentByIdService', true],
            'App\\Controller\\PaymentController::updatePayment' => ['privates', '.service_locator.4RUu2Zl.App\\Controller\\PaymentController::updatePayment()', 'getPaymentControllerupdatePaymentService', true],
            'App\\Controller\\PaymentController::deletePayment' => ['privates', '.service_locator.4RUu2Zl.App\\Controller\\PaymentController::deletePayment()', 'getPaymentControllerdeletePaymentService', true],
            'App\\Controller\\PermissionController::assignPermission' => ['privates', '.service_locator.M6r5JUz.App\\Controller\\PermissionController::assignPermission()', 'getPermissionControllerassignPermissionService', true],
            'App\\Controller\\PermissionController::getUserPermissions' => ['privates', '.service_locator.egipcEH.App\\Controller\\PermissionController::getUserPermissions()', 'getPermissionControllergetUserPermissionsService', true],
            'App\\Controller\\PermissionController::revokePermission' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\PermissionController::revokePermission()', 'getPermissionControllerrevokePermissionService', true],
            'App\\Controller\\ServiceController::createService' => ['privates', '.service_locator.A_Crmm9.App\\Controller\\ServiceController::createService()', 'getServiceControllercreateServiceService', true],
            'App\\Controller\\ServiceController::getAllServices' => ['privates', '.service_locator..wKp6bH.App\\Controller\\ServiceController::getAllServices()', 'getServiceControllergetAllServicesService', true],
            'App\\Controller\\ServiceController::getServiceById' => ['privates', '.service_locator..wKp6bH.App\\Controller\\ServiceController::getServiceById()', 'getServiceControllergetServiceByIdService', true],
            'App\\Controller\\ServiceController::updateService' => ['privates', '.service_locator.Nxw1N6..App\\Controller\\ServiceController::updateService()', 'getServiceControllerupdateServiceService', true],
            'App\\Controller\\ServiceController::deleteService' => ['privates', '.service_locator.Nxw1N6..App\\Controller\\ServiceController::deleteService()', 'getServiceControllerdeleteServiceService', true],
            'App\\Controller\\SpaceController::createSpace' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\SpaceController::createSpace()', 'getSpaceControllercreateSpaceService', true],
            'App\\Controller\\SpaceController::getAllSpaces' => ['privates', '.service_locator.L7r55b7.App\\Controller\\SpaceController::getAllSpaces()', 'getSpaceControllergetAllSpacesService', true],
            'App\\Controller\\SpaceController::getSpaceById' => ['privates', '.service_locator.L7r55b7.App\\Controller\\SpaceController::getSpaceById()', 'getSpaceControllergetSpaceByIdService', true],
            'App\\Controller\\SpaceController::archiveSpace' => ['privates', '.service_locator.5DPVkPI.App\\Controller\\SpaceController::archiveSpace()', 'getSpaceControllerarchiveSpaceService', true],
            'App\\Controller\\SpaceController::deleteSpace' => ['privates', '.service_locator.5DPVkPI.App\\Controller\\SpaceController::deleteSpace()', 'getSpaceControllerdeleteSpaceService', true],
            'App\\Controller\\SubscriptionController::createSubscription' => ['privates', '.service_locator.M6r5JUz.App\\Controller\\SubscriptionController::createSubscription()', 'getSubscriptionControllercreateSubscriptionService', true],
            'App\\Controller\\SubscriptionController::getSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::getSubscription()', 'getSubscriptionControllergetSubscriptionService', true],
            'App\\Controller\\SubscriptionController::getAllSubscriptions' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::getAllSubscriptions()', 'getSubscriptionControllergetAllSubscriptionsService', true],
            'App\\Controller\\SubscriptionController::updateSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::updateSubscription()', 'getSubscriptionControllerupdateSubscriptionService', true],
            'App\\Controller\\SubscriptionController::deleteSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::deleteSubscription()', 'getSubscriptionControllerdeleteSubscriptionService', true],
            'App\\Controller\\SubscriptionTagController::create' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\SubscriptionTagController::create()', 'getSubscriptionTagControllercreateService', true],
            'App\\Controller\\SubscriptionTagController::getAll' => ['privates', '.service_locator.gDJi.rQ.App\\Controller\\SubscriptionTagController::getAll()', 'getSubscriptionTagControllergetAllService', true],
            'App\\Controller\\SubscriptionTagController::getById' => ['privates', '.service_locator.gDJi.rQ.App\\Controller\\SubscriptionTagController::getById()', 'getSubscriptionTagControllergetByIdService', true],
            'App\\Controller\\SubscriptionTagController::delete' => ['privates', '.service_locator.KXcru5T.App\\Controller\\SubscriptionTagController::delete()', 'getSubscriptionTagControllerdeleteService', true],
            'App\\Controller\\TagController::createTag' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\TagController::createTag()', 'getTagControllercreateTagService', true],
            'App\\Controller\\TagController::getAllTags' => ['privates', '.service_locator.egipcEH.App\\Controller\\TagController::getAllTags()', 'getTagControllergetAllTagsService', true],
            'App\\Controller\\TagController::deleteTag' => ['privates', '.service_locator.egipcEH.App\\Controller\\TagController::deleteTag()', 'getTagControllerdeleteTagService', true],
            'App\\Controller\\UserController::createUser' => ['privates', '.service_locator.Xl1aRqp.App\\Controller\\UserController::createUser()', 'getUserControllercreateUserService', true],
            'App\\Controller\\UserController::getAllUsers' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getAllUsers()', 'getUserControllergetAllUsersService', true],
            'App\\Controller\\UserController::getUserById' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UserController::updateUser' => ['privates', '.service_locator.xyKlyvo.App\\Controller\\UserController::updateUser()', 'getUserControllerupdateUserService', true],
            'App\\Controller\\UserController::deleteUser' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\UserController::deleteUser()', 'getUserControllerdeleteUserService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\AuthController:login' => ['privates', '.service_locator.fLkKGsp.App\\Controller\\AuthController::login()', 'getAuthControllerloginService', true],
            'App\\Controller\\CategoryController:createCategory' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\CategoryController::createCategory()', 'getCategoryControllercreateCategoryService', true],
            'App\\Controller\\CategoryController:getAllCategories' => ['privates', '.service_locator.MTCWnA5.App\\Controller\\CategoryController::getAllCategories()', 'getCategoryControllergetAllCategoriesService', true],
            'App\\Controller\\CategoryController:getCategoryById' => ['privates', '.service_locator.MTCWnA5.App\\Controller\\CategoryController::getCategoryById()', 'getCategoryControllergetCategoryByIdService', true],
            'App\\Controller\\CategoryController:updateCategory' => ['privates', '.service_locator.HQ.7fB5.App\\Controller\\CategoryController::updateCategory()', 'getCategoryControllerupdateCategoryService', true],
            'App\\Controller\\CategoryController:deleteCategory' => ['privates', '.service_locator.HQ.7fB5.App\\Controller\\CategoryController::deleteCategory()', 'getCategoryControllerdeleteCategoryService', true],
            'App\\Controller\\MemberController:createMember' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\MemberController::createMember()', 'getMemberControllercreateMemberService', true],
            'App\\Controller\\MemberController:getAllMembers' => ['privates', '.service_locator.Zurzp9s.App\\Controller\\MemberController::getAllMembers()', 'getMemberControllergetAllMembersService', true],
            'App\\Controller\\MemberController:getMemberById' => ['privates', '.service_locator.Zurzp9s.App\\Controller\\MemberController::getMemberById()', 'getMemberControllergetMemberByIdService', true],
            'App\\Controller\\MemberController:updateMember' => ['privates', '.service_locator.cDm6hfL.App\\Controller\\MemberController::updateMember()', 'getMemberControllerupdateMemberService', true],
            'App\\Controller\\MemberController:deleteMember' => ['privates', '.service_locator.MMjNq0W.App\\Controller\\MemberController::deleteMember()', 'getMemberControllerdeleteMemberService', true],
            'App\\Controller\\NotificationController:createNotification' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\NotificationController::createNotification()', 'getNotificationControllercreateNotificationService', true],
            'App\\Controller\\NotificationController:getAllNotifications' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getAllNotifications()', 'getNotificationControllergetAllNotificationsService', true],
            'App\\Controller\\NotificationController:getNotificationById' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getNotificationById()', 'getNotificationControllergetNotificationByIdService', true],
            'App\\Controller\\NotificationController:markNotificationAsRead' => ['privates', '.service_locator.XTZwFOk.App\\Controller\\NotificationController::markNotificationAsRead()', 'getNotificationControllermarkNotificationAsReadService', true],
            'App\\Controller\\NotificationController:deleteNotification' => ['privates', '.service_locator.XTZwFOk.App\\Controller\\NotificationController::deleteNotification()', 'getNotificationControllerdeleteNotificationService', true],
            'App\\Controller\\PaymentController:createPayment' => ['privates', '.service_locator.gtQW1HD.App\\Controller\\PaymentController::createPayment()', 'getPaymentControllercreatePaymentService', true],
            'App\\Controller\\PaymentController:getAllPayments' => ['privates', '.service_locator.03VufjH.App\\Controller\\PaymentController::getAllPayments()', 'getPaymentControllergetAllPaymentsService', true],
            'App\\Controller\\PaymentController:getPaymentById' => ['privates', '.service_locator.03VufjH.App\\Controller\\PaymentController::getPaymentById()', 'getPaymentControllergetPaymentByIdService', true],
            'App\\Controller\\PaymentController:updatePayment' => ['privates', '.service_locator.4RUu2Zl.App\\Controller\\PaymentController::updatePayment()', 'getPaymentControllerupdatePaymentService', true],
            'App\\Controller\\PaymentController:deletePayment' => ['privates', '.service_locator.4RUu2Zl.App\\Controller\\PaymentController::deletePayment()', 'getPaymentControllerdeletePaymentService', true],
            'App\\Controller\\PermissionController:assignPermission' => ['privates', '.service_locator.M6r5JUz.App\\Controller\\PermissionController::assignPermission()', 'getPermissionControllerassignPermissionService', true],
            'App\\Controller\\PermissionController:getUserPermissions' => ['privates', '.service_locator.egipcEH.App\\Controller\\PermissionController::getUserPermissions()', 'getPermissionControllergetUserPermissionsService', true],
            'App\\Controller\\PermissionController:revokePermission' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\PermissionController::revokePermission()', 'getPermissionControllerrevokePermissionService', true],
            'App\\Controller\\ServiceController:createService' => ['privates', '.service_locator.A_Crmm9.App\\Controller\\ServiceController::createService()', 'getServiceControllercreateServiceService', true],
            'App\\Controller\\ServiceController:getAllServices' => ['privates', '.service_locator..wKp6bH.App\\Controller\\ServiceController::getAllServices()', 'getServiceControllergetAllServicesService', true],
            'App\\Controller\\ServiceController:getServiceById' => ['privates', '.service_locator..wKp6bH.App\\Controller\\ServiceController::getServiceById()', 'getServiceControllergetServiceByIdService', true],
            'App\\Controller\\ServiceController:updateService' => ['privates', '.service_locator.Nxw1N6..App\\Controller\\ServiceController::updateService()', 'getServiceControllerupdateServiceService', true],
            'App\\Controller\\ServiceController:deleteService' => ['privates', '.service_locator.Nxw1N6..App\\Controller\\ServiceController::deleteService()', 'getServiceControllerdeleteServiceService', true],
            'App\\Controller\\SpaceController:createSpace' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\SpaceController::createSpace()', 'getSpaceControllercreateSpaceService', true],
            'App\\Controller\\SpaceController:getAllSpaces' => ['privates', '.service_locator.L7r55b7.App\\Controller\\SpaceController::getAllSpaces()', 'getSpaceControllergetAllSpacesService', true],
            'App\\Controller\\SpaceController:getSpaceById' => ['privates', '.service_locator.L7r55b7.App\\Controller\\SpaceController::getSpaceById()', 'getSpaceControllergetSpaceByIdService', true],
            'App\\Controller\\SpaceController:archiveSpace' => ['privates', '.service_locator.5DPVkPI.App\\Controller\\SpaceController::archiveSpace()', 'getSpaceControllerarchiveSpaceService', true],
            'App\\Controller\\SpaceController:deleteSpace' => ['privates', '.service_locator.5DPVkPI.App\\Controller\\SpaceController::deleteSpace()', 'getSpaceControllerdeleteSpaceService', true],
            'App\\Controller\\SubscriptionController:createSubscription' => ['privates', '.service_locator.M6r5JUz.App\\Controller\\SubscriptionController::createSubscription()', 'getSubscriptionControllercreateSubscriptionService', true],
            'App\\Controller\\SubscriptionController:getSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::getSubscription()', 'getSubscriptionControllergetSubscriptionService', true],
            'App\\Controller\\SubscriptionController:getAllSubscriptions' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::getAllSubscriptions()', 'getSubscriptionControllergetAllSubscriptionsService', true],
            'App\\Controller\\SubscriptionController:updateSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::updateSubscription()', 'getSubscriptionControllerupdateSubscriptionService', true],
            'App\\Controller\\SubscriptionController:deleteSubscription' => ['privates', '.service_locator.egipcEH.App\\Controller\\SubscriptionController::deleteSubscription()', 'getSubscriptionControllerdeleteSubscriptionService', true],
            'App\\Controller\\SubscriptionTagController:create' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\SubscriptionTagController::create()', 'getSubscriptionTagControllercreateService', true],
            'App\\Controller\\SubscriptionTagController:getAll' => ['privates', '.service_locator.gDJi.rQ.App\\Controller\\SubscriptionTagController::getAll()', 'getSubscriptionTagControllergetAllService', true],
            'App\\Controller\\SubscriptionTagController:getById' => ['privates', '.service_locator.gDJi.rQ.App\\Controller\\SubscriptionTagController::getById()', 'getSubscriptionTagControllergetByIdService', true],
            'App\\Controller\\SubscriptionTagController:delete' => ['privates', '.service_locator.KXcru5T.App\\Controller\\SubscriptionTagController::delete()', 'getSubscriptionTagControllerdeleteService', true],
            'App\\Controller\\TagController:createTag' => ['privates', '.service_locator.Pvsz2ki.App\\Controller\\TagController::createTag()', 'getTagControllercreateTagService', true],
            'App\\Controller\\TagController:getAllTags' => ['privates', '.service_locator.egipcEH.App\\Controller\\TagController::getAllTags()', 'getTagControllergetAllTagsService', true],
            'App\\Controller\\TagController:deleteTag' => ['privates', '.service_locator.egipcEH.App\\Controller\\TagController::deleteTag()', 'getTagControllerdeleteTagService', true],
            'App\\Controller\\UserController:createUser' => ['privates', '.service_locator.Xl1aRqp.App\\Controller\\UserController::createUser()', 'getUserControllercreateUserService', true],
            'App\\Controller\\UserController:getAllUsers' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getAllUsers()', 'getUserControllergetAllUsersService', true],
            'App\\Controller\\UserController:getUserById' => ['privates', '.service_locator.egipcEH.App\\Controller\\UserController::getUserById()', 'getUserControllergetUserByIdService', true],
            'App\\Controller\\UserController:updateUser' => ['privates', '.service_locator.xyKlyvo.App\\Controller\\UserController::updateUser()', 'getUserControllerupdateUserService', true],
            'App\\Controller\\UserController:deleteUser' => ['privates', '.service_locator.R0lEtSA.App\\Controller\\UserController::deleteUser()', 'getUserControllerdeleteUserService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\AuthController::login' => '?',
            'App\\Controller\\CategoryController::createCategory' => '?',
            'App\\Controller\\CategoryController::getAllCategories' => '?',
            'App\\Controller\\CategoryController::getCategoryById' => '?',
            'App\\Controller\\CategoryController::updateCategory' => '?',
            'App\\Controller\\CategoryController::deleteCategory' => '?',
            'App\\Controller\\MemberController::createMember' => '?',
            'App\\Controller\\MemberController::getAllMembers' => '?',
            'App\\Controller\\MemberController::getMemberById' => '?',
            'App\\Controller\\MemberController::updateMember' => '?',
            'App\\Controller\\MemberController::deleteMember' => '?',
            'App\\Controller\\NotificationController::createNotification' => '?',
            'App\\Controller\\NotificationController::getAllNotifications' => '?',
            'App\\Controller\\NotificationController::getNotificationById' => '?',
            'App\\Controller\\NotificationController::markNotificationAsRead' => '?',
            'App\\Controller\\NotificationController::deleteNotification' => '?',
            'App\\Controller\\PaymentController::createPayment' => '?',
            'App\\Controller\\PaymentController::getAllPayments' => '?',
            'App\\Controller\\PaymentController::getPaymentById' => '?',
            'App\\Controller\\PaymentController::updatePayment' => '?',
            'App\\Controller\\PaymentController::deletePayment' => '?',
            'App\\Controller\\PermissionController::assignPermission' => '?',
            'App\\Controller\\PermissionController::getUserPermissions' => '?',
            'App\\Controller\\PermissionController::revokePermission' => '?',
            'App\\Controller\\ServiceController::createService' => '?',
            'App\\Controller\\ServiceController::getAllServices' => '?',
            'App\\Controller\\ServiceController::getServiceById' => '?',
            'App\\Controller\\ServiceController::updateService' => '?',
            'App\\Controller\\ServiceController::deleteService' => '?',
            'App\\Controller\\SpaceController::createSpace' => '?',
            'App\\Controller\\SpaceController::getAllSpaces' => '?',
            'App\\Controller\\SpaceController::getSpaceById' => '?',
            'App\\Controller\\SpaceController::archiveSpace' => '?',
            'App\\Controller\\SpaceController::deleteSpace' => '?',
            'App\\Controller\\SubscriptionController::createSubscription' => '?',
            'App\\Controller\\SubscriptionController::getSubscription' => '?',
            'App\\Controller\\SubscriptionController::getAllSubscriptions' => '?',
            'App\\Controller\\SubscriptionController::updateSubscription' => '?',
            'App\\Controller\\SubscriptionController::deleteSubscription' => '?',
            'App\\Controller\\SubscriptionTagController::create' => '?',
            'App\\Controller\\SubscriptionTagController::getAll' => '?',
            'App\\Controller\\SubscriptionTagController::getById' => '?',
            'App\\Controller\\SubscriptionTagController::delete' => '?',
            'App\\Controller\\TagController::createTag' => '?',
            'App\\Controller\\TagController::getAllTags' => '?',
            'App\\Controller\\TagController::deleteTag' => '?',
            'App\\Controller\\UserController::createUser' => '?',
            'App\\Controller\\UserController::getAllUsers' => '?',
            'App\\Controller\\UserController::getUserById' => '?',
            'App\\Controller\\UserController::updateUser' => '?',
            'App\\Controller\\UserController::deleteUser' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\AuthController:login' => '?',
            'App\\Controller\\CategoryController:createCategory' => '?',
            'App\\Controller\\CategoryController:getAllCategories' => '?',
            'App\\Controller\\CategoryController:getCategoryById' => '?',
            'App\\Controller\\CategoryController:updateCategory' => '?',
            'App\\Controller\\CategoryController:deleteCategory' => '?',
            'App\\Controller\\MemberController:createMember' => '?',
            'App\\Controller\\MemberController:getAllMembers' => '?',
            'App\\Controller\\MemberController:getMemberById' => '?',
            'App\\Controller\\MemberController:updateMember' => '?',
            'App\\Controller\\MemberController:deleteMember' => '?',
            'App\\Controller\\NotificationController:createNotification' => '?',
            'App\\Controller\\NotificationController:getAllNotifications' => '?',
            'App\\Controller\\NotificationController:getNotificationById' => '?',
            'App\\Controller\\NotificationController:markNotificationAsRead' => '?',
            'App\\Controller\\NotificationController:deleteNotification' => '?',
            'App\\Controller\\PaymentController:createPayment' => '?',
            'App\\Controller\\PaymentController:getAllPayments' => '?',
            'App\\Controller\\PaymentController:getPaymentById' => '?',
            'App\\Controller\\PaymentController:updatePayment' => '?',
            'App\\Controller\\PaymentController:deletePayment' => '?',
            'App\\Controller\\PermissionController:assignPermission' => '?',
            'App\\Controller\\PermissionController:getUserPermissions' => '?',
            'App\\Controller\\PermissionController:revokePermission' => '?',
            'App\\Controller\\ServiceController:createService' => '?',
            'App\\Controller\\ServiceController:getAllServices' => '?',
            'App\\Controller\\ServiceController:getServiceById' => '?',
            'App\\Controller\\ServiceController:updateService' => '?',
            'App\\Controller\\ServiceController:deleteService' => '?',
            'App\\Controller\\SpaceController:createSpace' => '?',
            'App\\Controller\\SpaceController:getAllSpaces' => '?',
            'App\\Controller\\SpaceController:getSpaceById' => '?',
            'App\\Controller\\SpaceController:archiveSpace' => '?',
            'App\\Controller\\SpaceController:deleteSpace' => '?',
            'App\\Controller\\SubscriptionController:createSubscription' => '?',
            'App\\Controller\\SubscriptionController:getSubscription' => '?',
            'App\\Controller\\SubscriptionController:getAllSubscriptions' => '?',
            'App\\Controller\\SubscriptionController:updateSubscription' => '?',
            'App\\Controller\\SubscriptionController:deleteSubscription' => '?',
            'App\\Controller\\SubscriptionTagController:create' => '?',
            'App\\Controller\\SubscriptionTagController:getAll' => '?',
            'App\\Controller\\SubscriptionTagController:getById' => '?',
            'App\\Controller\\SubscriptionTagController:delete' => '?',
            'App\\Controller\\TagController:createTag' => '?',
            'App\\Controller\\TagController:getAllTags' => '?',
            'App\\Controller\\TagController:deleteTag' => '?',
            'App\\Controller\\UserController:createUser' => '?',
            'App\\Controller\\UserController:getAllUsers' => '?',
            'App\\Controller\\UserController:getUserById' => '?',
            'App\\Controller\\UserController:updateUser' => '?',
            'App\\Controller\\UserController:deleteUser' => '?',
        ]);
    }
}
